#!/usr/bin/env bash
set -euo pipefail
IFS=$'\n\t'
VERSION="1.0.0"
ICSP_DIR="$(dirname "$(readlink -f "$0")")"

help="
icsp - iCalendar (.ics) parser. v$VERSION

Convert iCalendar files to (and from) TSV files.

Usage:
  icsp [-c columns] [-d delimiter] [-x component] [-nrh] [file]

Options:
  -c <string>   Comma seperated list of fields to parse. Order is preserved, case insensitive.
  -d <string>   Delimiter character to use for seperating values. Default: '\t' (TAB character)
  -x <string>   ICS component to parse. Default: VEVENT
  -n            No date conversion (faster processing, no DURATION column, no ISO format)
  -r            Reverse conversion (Build ICS file from TSV)
  -h            Show this help text.

Documentation:
  See https://github.com/loteoo/icsp for more information.
"

see_usage="See 'icsp -h' for usage."

throw() {
  echo "$@" 1>&2
  exit 1
}

# Run icsp
# ============

# Default option values
columns=""
delimiter=$'\t'
component="VEVENT"

# Parse options
while getopts "c:d:x:nrh" arg; do
  case $arg in
    c) columns="$(echo "$OPTARG" | tr '[:lower:]' '[:upper:]')";;
    d) delimiter="$OPTARG";;
    x) component="$OPTARG";;
    n) no_iso="true";;
    r) reverse="true";;
    h) echo "$help"; exit 0;;
    *) throw "$see_usage";;
  esac
done
shift $((OPTIND - 1))

# Validate that there's stdin OR valid file path
if [[ -n ${1+x} ]]; then
  if [[ ! -f "$1" ]]; then
    throw "File \"$1\" does not exist."
  fi
else
  if [[ -t 0 ]]; then
    throw "No file or stdin specified. $see_usage"
  fi
fi

if [[ -z "${reverse:-}" ]]; then
  ### ICS to TSV
  # Read from file or STDIN
  # awk -> collapse multi-line fields into a single line
  # sed -> create a TSV of key:value from ics fields
  # sed -> cleanup keys that have extra data after a ";" character
  # sed -> Remove unecessary escape backslashes
  # tr -> remove DOS carriage characters
  # awk -> Run TSV conversion using ics-to-csv.awk
  cat ${1:-} \
    | awk -v RS= '{gsub(/\r\n[[:blank:]]/,"")}1' \
    | sed 's/:/\t/' \
    | sed 's/;.*\t/\t/' \
    | sed 's/\\\([^[:alpha:]]\)/\1/g' \
    | tr -d $'\r' \
    | awk \
      -v OFS="$delimiter" \
      -v columns="$columns" \
      -v component="$component" \
      -v no_iso="${no_iso:-}" \
      -f "$ICSP_DIR/ics-to-csv.awk"
else
  cat ${1:-} \
    | awk \
      -v FS="$delimiter" \
      -f "$ICSP_DIR/csv-to-ics.awk"
fi