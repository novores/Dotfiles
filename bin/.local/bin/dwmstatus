#!/bin/dash

# ^c$var^ = fg color
# ^b$var^ = bg color

# load colors
#gruvbox
# black=#32302f
# darkblack=#1d2021
# grey=#3c3836
# green=#a9b665
# white=#d4be98
# blue=#7daea3
# darkblue=#45707a
# red=#ea6962
# darkred=#c14a4a
# magenta=#d3869b
# yellow=#d8a657
# darkyellow=#d79921
#catppuccin
black=#1e1e2e
darkblack=#11111b
gray=#313244
green=#a6e3a1
white=#f8f8f2
blue=#94e2d5
darkblue=#89b4fa
red=#f38ba8
magenta=#cba6f7
yellow=#f9e2af

lang() {
COMMAND=$(xset -q | grep LED | awk '{ print $10 }')

case "$COMMAND" in
 "00000000"|"00000001") LAYOUT="en" ;;
 "00001000"|"00001001") LAYOUT="ar" ;;
  *) LAYOUT="??" ;;
esac
printf "^c$yellow^ 󰘚 ^c$white^$LAYOUT^d^"
}

cpu() {
  cpu_val=$(grep -o "^[^ ]*" /proc/loadavg)
  printf "^c$yellow^ 󰘚 ^c$white^$cpu_val^d^"
}

battery() {
   battery_level=`acpi -b | grep -P -o '\d+(?=%)'`
  case "$(cat /sys/class/power_supply/AC/online)" in 
    1) printf "^c$green^  ^c$white^$battery_level ^d^";;
    0) 
      case $((
        ($battery_level >= 0 && $battery_level < 20) * 1 +
        ($battery_level >= 20 && $battery_level < 30) * 2 +
        ($battery_level >= 30 && $battery_level < 40) * 3 +
        ($battery_level >= 40 && $battery_level < 50) * 4 +
        ($battery_level >= 50 && $battery_level < 60) * 5 +
        ($battery_level >= 60 && $battery_level < 70) * 6 +
        ($battery_level >= 80 && $battery_level < 90) * 7 +
        ($battery_level >= 90 && $battery_level <= 100) * 8 
        )) in
        (1) printf "^c$red^ 󰂃 ^c$white^$battery_level ^d^";;
        (2) printf "^c$yellow^ 󰁼 ^c$white^$battery_level ^d^";;
        (3) printf "^c$yellow^ 󰁽 ^c$white^$battery_level ^d^";;
        (4) printf "^c$yellow^ 󰁾 ^c$white^$battery_level ^d^";;
        (5) printf "^c$green^ 󰁿 ^c$white^$battery_level ^d^";;
        (6) printf "^c$green^ 󰂀 ^c$white^$battery_level ^d^";;
        (7) printf "^c$green^ 󰂁 ^c$white^$battery_level ^d^";;
        (8) printf "^c$green^ 󰂂 ^c$white^$battery_level ^d^";;
      esac;;
  esac
}

brightness() {
  get_brightness=$(xbacklight -get | cut -d '.' -f 1)
  printf "^c$yellow^  ^c$white^$get_brightness ^d^"
}

mem() {
  get_mem=$(free -h | awk '/^Mem/ { print $3 }' | sed s/i//g)
  printf "^c$yellow^ 󰍛 ^d^^c$white^$get_mem^d^"
}

 wlan() {
  #  #iwd
  # get_ssid=$(iwctl station wlan0 show | awk 'NR==7 {print $3}')
  dot=".."
  get_ssid="$(iwctl station wlan0 show | awk -v OFS=' ' '/network/ {print $3,$4}'| cut -c 1-8)"
  get_rssi="$(iwctl station wlan0 show | grep '\<RSSI\>' | awk '{print $2}')"
   # get_ssid=$(wpa_cli status | awk NR==4 | cut -c 6-20) #wpa_supplicant
 	case "$(cat /sys/class/net/wl*/operstate 2>/dev/null)" in
     up) 
        case $((
          ($get_rssi <= 0 && $get_rssi >= -30)   * 1 +
          ($get_rssi < -30 && $get_rssi >= -67)  * 2 +
          ($get_rssi < -67 && $get_rssi >= -70) * 3 +
          ($get_rssi < -70 && $get_rssi >= -90) * 4 +
          ($get_rssi <= -90 ) * 5
          )) in
          (1) printf   "%s^c$green^ 󰤨 ^c$white^$get_ssid^c$green^^d^" ;;
          (2) printf   "%s^c$green^ 󰤥 ^c$white^$get_ssid^c$green^^d^" ;;
          (3) printf   "%s^c$green^ 󰤢 ^c$white^$get_ssid^c$green^^d^" ;;
          (4) printf   "%s^c$yellow^ 󰤟 ^c$white^$get_ssid^c$green^^d^" ;;
          (5) printf   "%s^c$red^ 󰤯 ^c$white^$get_ssid^c$green^^d^" ;;
        esac;;
     down) printf  "%s^c$red^ 󰖪 ^d^" ;;
 	esac
 }

clock() {
	printf "^c$yellow^^b$gray^ $(date '+%_a,%e/%m') ^c$yellow^^d^%s" "^b$yellow^^c$gray^ $(date '+%H:%M') ^d^"
}

volume() {
  vol=$(pamixer --get-volume)
  state=$(pamixer --get-mute)

  if [ "$state" = "true" ] || [ "$vol" -eq 0 ]; then
    printf "^c$red^ 󰝟 ^c$white^mute^d^"
  else
      case $((
        (vol >= 0 && vol <= 30)   * 1 +
        (vol > 30 && vol <= 60)  * 2 +
        (vol > 60 && vol <= 100) * 3 )) in
        (1) printf "^c$green^ 󰕿 ^c$white^$vol^d^";;
        (2) printf "^c$yellow^ 󰖀 ^c$white^$vol^d^";;
        (3) printf "^c$red^ 󰕾 ^c$white^$vol^d^";;
      esac
  fi
}

mpd() {
  if pgrep mpd > /dev/null; then
  get_artist=$(mpc -f "%artist%"| awk NR==1 | cut -c 1-30)
  get_title=$(mpc -f "%title%"| awk NR==1 | cut -c 1-30)
    case "$(mpc status -f %state% | awk NR==2 | cut -c-9)" in
      "[playing]") printf "^b$green^^c$black^ MPD ^b$gray^^c$yellow^  ^d^%s" "^b$gray^^c$blue^$get_artist^c$yellow^ $get_title ^d^" 
      ;;
      "[paused] ") printf "^b$yellow^^c$black^ MPD ^b$gray^^c$yellow^  ^d^%s" "^b$gray^^c$blue^$get_artist^c$yellow^ $get_title ^d^" 
      ;;
      *) printf " ^b$yellow^^c$black^ MPD ^d^%s" "^b$gray^ Stopped ^d^" 
      ;;
    esac
  else
    printf "^b$red^^c$black^ MPD ^d^%s" "^b$gray^^c$yellow^ Offline ^d^"
  fi
}

pomo() {
  status=$(p clock |cut -c 3-)
  if [ $(p clock | cut -c 3-) = "--:--" ] ; then
     printf "^c$red^  ^c$yellow^Off^d^"
  else
     printf "^c$green^  ^c$white^$status^d^"
  fi
}

while true; do
  sleep 1 && xsetroot -name "$(mpd) $(pomo) $(lang) $(volume) $(brightness) $(cpu) $(mem) $(wlan) $(battery) $(clock)"
done

# vim:ft=bash
